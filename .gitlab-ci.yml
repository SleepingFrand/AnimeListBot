stages:
  - build
  - deploy
  - reset
  - waiting_start

variables:
  DOCKER_REPO: anlis
  DOCKER_REGISTRY: "sleepingfrand/"
  APP_NAME: al-telegram-bot
  APP_NAMESPACE: telegram-bot
  APP_LABLE: animelist-app

# Сборка и пуш docker image в Docker Hub
build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - docker build -t ${DOCKER_REGISTRY}${DOCKER_REPO}:$CI_COMMIT_SHA ./AnimeLists_bot
    - docker tag ${DOCKER_REGISTRY}${DOCKER_REPO}:$CI_COMMIT_SHA ${DOCKER_REGISTRY}${DOCKER_REPO}:latest
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker push ${DOCKER_REGISTRY}${DOCKER_REPO}:$CI_COMMIT_SHA
    - docker push ${DOCKER_REGISTRY}${DOCKER_REPO}:latest
  rules:
    - if: $CI_COMMIT_REF_NAME == "master"

# Установка локального helm chart
install_local_helm_chart:
  stage: deploy
  image: alpine/helm:3.5.3
  script:
    - helm upgrade -i $APP_NAME --namespace $APP_NAMESPACE --create-namespace ./helm --set telegram.token=$TELEGRAM_BOT_TOKEN,namespace=$APP_NAMESPACE,deployment.selector.matchLabels.app=$APP_LABLE,deployment.container.image=${DOCKER_REGISTRY}${DOCKER_REPO}:latest

# Удаление ReplicaSet, если он есть
delete_existing_replicaset:
  stage: reset
  image: bitnami/kubectl:1.22
  script:
    - kubectl -n $APP_NAMESPACE delete replicasets -l app=$APP_LABLE

# Ожидание поднятия пода со статусом готов
wait_for_pod_ready:
  stage: waiting_start
  image: bitnami/kubectl:1.22
  script:
    - kubectl -n $APP_NAMESPACE wait --for=condition=Ready pod -l app=$APP_LABLE --timeout=300s
